// Generated by CoffeeScript 1.6.3
(function() {
  var gameId, onMessage, onWSClose, onWSError, onWSOpen, sendMessage, ws;

  ws = null;

  gameId = 0;

  $(document).ready(function() {
    var that;
    that = this;
    $("#connect").click(function() {
      console.log("trying to connect");
      ws = new WebSocket("ws://" + $("#address").val());
      gameId = parseInt($("#gameId").val());
      ws.onmessage = onMessage.bind(that);
      ws.onopen = onWSOpen.bind(that);
      ws.onclose = onWSClose.bind(that);
      return ws.onerror = onWSError.bind(that);
    });
    $("#button-click").on("mousedown", function() {
      return sendMessage({
        event: 'keydown',
        key: 'click'
      });
    });
    $("#button-click").on("mouseup", function() {
      return sendMessage({
        event: 'keyup',
        key: 'click'
      });
    });
    $("#button-right").on("mousedown", function() {
      return sendMessage({
        event: 'keydown',
        key: 'right'
      });
    });
    $("#button-right").on("mouseup", function() {
      return sendMessage({
        event: 'keyup',
        key: 'right'
      });
    });
    $("#button-up").on("mousedown", function() {
      return sendMessage({
        event: 'keydown',
        key: 'up'
      });
    });
    $("#button-down").on("mouseup", function() {
      return sendMessage({
        event: 'keyup',
        key: 'down'
      });
    });
    $("#button-down").on("mousedown", function() {
      return sendMessage({
        event: 'keydown',
        key: 'down'
      });
    });
    $("#button-up").on("mouseup", function() {
      return sendMessage({
        event: 'keyup',
        key: 'up'
      });
    });
    $("#button-left").on("mousedown", function() {
      return sendMessage({
        event: 'keydown',
        key: 'left'
      });
    });
    return $("#button-left").on("mouseup", function() {
      return sendMessage({
        event: 'keyup',
        key: 'left'
      });
    });
  });

  onMessage = function(message) {
    var layout, msgObject;
    console.log(message);
    msgObject = JSON.parse(message["data"]);
    if (!"event" in msgObject) {
      console.log("strange message");
      return;
    }
    if (msgObject["event"] === "layout") {
      layout = msgObject["layout"];
      return console.log("set layout " + layout);
    }
  };

  onWSOpen = function() {
    console.log("ws open");
    $("#status").html("Connected");
    return sendMessage({
      gameId: gameId,
      action: "connected"
    });
  };

  onWSError = function() {
    ws = null;
    $("#status").html("Connection error");
    return console.log("connection error");
  };

  onWSClose = function() {
    ws = null;
    $("#status").html("Lost connection");
    return console.log("connection close");
  };

  sendMessage = function(msgObject) {
    var message;
    if (typeof msgObject === "object") {
      message = JSON.stringify(msgObject);
    } else {
      message = msgObject;
    }
    return ws.send(message);
  };

}).call(this);
